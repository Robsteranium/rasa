{{- /*

The template reads a file with a report (the report file is available
as an artifact in the model regression tests workflow) and returns
a markdown table with a summary of the tests.

*/ -}}
{{- $results_master := (datasource "results_master") -}}
{{ range $dataset, $config := (datasource "data")}}
{{- $dataset_master := (index $results_master $dataset) -}}
Dataset: `{{$dataset}}`

| Configuration | Intent Classification Micro F1 | Entity Recognition Micro F1 | Response Selection Micro F1 |
|---------------|-----------------|-----------------|-------------------|
{{ range $config_name, $config_data := $config -}}
| `{{ $config_name }}`<br> test: `{{ $config_data.test_run_time }}`, train: `{{ $config_data.train_run_time }}`, total: `{{ $config_data.total_run_time }}` |
{{- if has $config_data "intent_classification" -}}
{{- /* Use results from branch if there is lack of data doesn't exist in results from scheduled version */ -}}
{{- $intent_class_master := $config_data.intent_classification -}}
{{- if has $dataset_master $config_name -}}
{{- $intent_class_master = (index $dataset_master $config_name).intent_classification -}}
{{- end -}}
{{- $intent_class := index $config_data.intent_classification -}}
{{- if (has (index $intent_class "micro avg") "f1-score") -}}{{ printf "%.4f" (index (index $intent_class "micro avg") "f1-score") }} ({{ printf "%.2f" ((index (index $intent_class_master "micro avg") "f1-score") | math.Sub (index (index $intent_class "micro avg") "f1-score")) }}){{- else if (has $intent_class "accuracy") -}}{{ printf "%.4f" $intent_class.accuracy }} ({{ printf "%.2f" ($intent_class_master.accuracy | math.Sub $intent_class.accuracy) }}){{- else -}}`no data`{{- end -}} |
{{- else -}}
`no data`|
{{- end -}}
{{- if has $config_data "entity_prediction" -}}
{{- /* Use results from branch if there is lack of data doesn't exist in results from scheduled version */ -}}
{{- $entity_class_master := index $config_data.entity_prediction -}}
{{- if has $dataset_master $config_name -}}
{{- $entity_class_master = (index $dataset_master $config_name).entity_prediction -}}
{{- end -}}
{{- $entity_class := $config_data.entity_prediction -}}
{{- if (has (index $entity_class "micro avg") "f1-score") -}}{{ printf "%.4f" (index (index $entity_class "micro avg") "f1-score") }} ({{ printf "%.2f" ((index (index $entity_class_master "micro avg") "f1-score") | math.Sub (index (index $entity_class "micro avg") "f1-score")) }}){{- else if (has $entity_class "accuracy") -}}{{ printf "%.4f" $entity_class.accuracy }} ({{ printf "%.2f" ($entity_class_master.accuracy | math.Sub $entity_class.accuracy) }}){{- else -}}`no data`{{- end -}} |
{{- else -}}
`no data`|
{{- end -}}
{{- if has $config_data "response_selection" -}}
{{- /* Use results from branch if there is lack of data doesn't exist in results from scheduled version */ -}}
{{- $response_class_master := index $config_data.response_selection -}}
{{- if has $dataset_master $config_name -}}
{{- $response_class_master = (index $dataset_master $config_name).response_selection -}}
{{- end -}}
{{- $response_class := $config_data.response_selection -}}
{{- if (has (index $response_class "micro avg") "f1-score") -}}{{ printf "%.4f" (index (index $response_class "micro avg") "f1-score") }} ({{ printf "%.2f" ((index (index $response_class_master "micro avg") "f1-score") | math.Sub (index (index $response_class "micro avg") "f1-score")) }}){{- else if (has $response_class "accuracy") -}}{{ printf "%.4f" $response_class.accuracy }} ({{ printf "%.2f" ($response_class_master.accuracy | math.Sub $response_class.accuracy) }}){{- else -}}`no data`{{- end -}} |
{{- else -}}
`no data`|
{{- end }}
{{end}}
{{end}}
